


when create django project
    this will be created with default installed apps
    this list contains the applications that django can interact with ?

    ---> when user request template from django
    django scans the templates folders in the installed_apps

    INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


### after you create new application in django project
You must 00>> add this application to the installed apps

how?

got apps.py file in your application, copy classname
and include the application as follows

    'courses.apps.CoursesConfig'




######### when you add the static folder for the first time
in your application --> you must restart the server so the project can feel the static files



############ create base template ?
    --> basic architecture

        =>> inherits existing templates


#############################

### connect postgres

1- install postgres driver
pip install psycopg2
pip install psycopg2-binary


then add connection credits to your settings.py
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "djangost23py1",
        "USER": "stpy123",
        "PASSWORD": "iti",
        "HOST": "localhost",
        "PORT": "5432",
    }
}
https://docs.djangoproject.com/en/4.2/ref/databases/#postgresql-notes

Now you are ready to perform operations on the database using django

################# dealing with models

Models intro
https://docs.djangoproject.com/en/4.2/topics/db/models/


fields datatypes
https://docs.djangoproject.com/en/4.2/topics/db/models/#field-types


to create migrationfiles that represent the changes in your models run the following
python manage.py makemigrations
    00> scan all models files in the installed apps (for changes )
    if change detected? ---> generate migrations files represent this change


to apply changes in the migration files to the database
python manage.py migrate

####################### use admin panel

create superuser to use it

python manage.py createsuperuser




### you can use admin dashboard to control operations on your created models ?

any model you want to be controlled by admin

open in your app /// admin.py
import desired model

admin.site.register(Modelname )




####################### to get data from database
use django database access api:
https://docs.djangoproject.com/en/4.2/topics/db/queries/


---> select * from students_student;

all_entries = Student.objects.all()

select specific object from database
std = Student.objects.get(id=id)

